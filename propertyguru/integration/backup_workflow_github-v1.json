{
  "active": false,
  "connections": {
    "Compare Files": {
      "main": [
        [
          {
            "index": 0,
            "node": "Switch",
            "type": "main"
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "index": 1,
            "node": "Merge",
            "type": "main"
          }
        ]
      ]
    },
    "Execute Backup Flow": {
      "main": [
        [
          {
            "index": 0,
            "node": "Loop Over Items",
            "type": "main"
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "index": 0,
            "node": "If File Is Too Large",
            "type": "main"
          }
        ]
      ]
    },
    "Get many workflows": {
      "main": [
        [
          {
            "index": 0,
            "node": "Loop Over Items",
            "type": "main"
          }
        ]
      ]
    },
    "Github Params": {
      "main": [
        [
          {
            "index": 0,
            "node": "Get a file",
            "type": "main"
          }
        ]
      ]
    },
    "If File Is Too Large": {
      "main": [
        [
          {
            "index": 0,
            "node": "Download File",
            "type": "main"
          }
        ],
        [
          {
            "index": 1,
            "node": "Merge",
            "type": "main"
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "index": 0,
            "node": "Execute Backup Flow",
            "type": "main"
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "index": 0,
            "node": "Compare Files",
            "type": "main"
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "index": 0,
            "node": "Get many workflows",
            "type": "main"
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [
          {
            "index": 0,
            "node": "Edit a file",
            "type": "main"
          }
        ],
        [
          {
            "index": 0,
            "node": "Create a file",
            "type": "main"
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "index": 0,
            "node": "Merge",
            "type": "main"
          },
          {
            "index": 0,
            "node": "Github Params",
            "type": "main"
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T07:28:25.853Z",
  "id": "DcJmbLZzbx7CY2sJ",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "backup_workflow_github",
  "nodes": [
    {
      "id": "af5ea6fa-02bf-41a6-ae99-a6661bf5851e",
      "name": "Sticky Note",
      "parameters": {
        "content": "Get Workflows With `production` Tag",
        "height": 352,
        "width": 1280
      },
      "position": [
        -352,
        -192
      ],
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1
    },
    {
      "credentials": {
        "n8nApi": {
          "id": "V8SyeIlWKrjAR0KP",
          "name": "n8n account"
        }
      },
      "id": "284eed77-6863-4f39-9489-8660a188d8ee",
      "name": "Get many workflows",
      "parameters": {
        "filters": {
          "excludePinnedData": true,
          "tags": "={{ $json.Environment }}"
        },
        "requestOptions": {}
      },
      "position": [
        64,
        -128
      ],
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1
    },
    {
      "id": "a7b3aeb9-6fe1-4c02-9fa9-7a9c4feec136",
      "name": "Loop Over Items",
      "parameters": {
        "options": {}
      },
      "position": [
        288,
        -128
      ],
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3
    },
    {
      "id": "bef07e35-21d8-403f-a2e0-c047bed9ad3a",
      "name": "Sticky Note1",
      "parameters": {
        "color": 6,
        "content": "Check For Existing Backup",
        "height": 272,
        "width": 1280
      },
      "position": [
        -352,
        224
      ],
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1
    },
    {
      "id": "8d8c11ff-e647-4014-929a-e7ceabf904b4",
      "name": "Github Params",
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4c9ede30-77b2-4b99-b709-006bdb29ff2c",
              "name": "repo.owner",
              "type": "string",
              "value": "SandeepFinTechPG"
            },
            {
              "id": "5554aa16-f230-442a-84d1-fff499bd7de1",
              "name": "repo.name",
              "type": "string",
              "value": "ai-powered-project-insights"
            },
            {
              "id": "24fe4255-1408-4b2f-b07b-0c4c2b772462",
              "name": "repo.environment",
              "type": "string",
              "value": "={{ $json.tags.filter(tag => ['development', 'integration', 'staging', 'production'].includes(tag.name))[0].name }}"
            },
            {
              "id": "d855d854-523e-411a-aac8-403f1cef0fe9",
              "name": "repo.path",
              "type": "string",
              "value": "propertyguru/"
            },
            {
              "id": "3e11ca8b-9b7b-4e76-89f3-5f002986ea06",
              "name": "repo.filename",
              "type": "string",
              "value": "={{ $json.name }}"
            },
            {
              "id": "826060e1-4928-4b3a-84a5-7d126660b6b8",
              "name": "repo.workflow.version",
              "type": "string",
              "value": "={{ $json.tags.filter(tag => /^v(\\d+(\\.\\d+)*)?$/.test(tag.name))[0].name }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "position": [
        160,
        288
      ],
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4
    },
    {
      "alwaysOutputData": false,
      "credentials": {
        "githubApi": {
          "id": "IWtvntBMCuzfgvxH",
          "name": "GitHub account"
        }
      },
      "id": "fbd6a81b-e7ed-4d9f-b1e5-9aba7d460e30",
      "name": "Get a file",
      "onError": "continueRegularOutput",
      "parameters": {
        "additionalParameters": {},
        "asBinaryProperty": false,
        "filePath": "={{ $json.repo.path }}{{ $json.repo.environment }}/{{ $json.repo.filename }}-{{ $json.repo.workflow.version }}.json",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "resource": "file"
      },
      "position": [
        320,
        288
      ],
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "webhookId": "e7cce09b-3b73-4f75-83d3-3c52293f9c55"
    },
    {
      "id": "c4ae0916-d9df-42ce-af17-245344d11c69",
      "name": "Merge",
      "parameters": {},
      "position": [
        -144,
        720
      ],
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2
    },
    {
      "id": "be5a5154-43ee-4119-957e-f9596e40b0aa",
      "name": "Switch",
      "parameters": {
        "options": {},
        "rules": {
          "values": [
            {
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "a1a84997-93ad-49ef-97a6-0e1097d2703a",
                    "leftValue": "={{ $json.github_status }}",
                    "operator": {
                      "operation": "equals",
                      "type": "string"
                    },
                    "rightValue": ""
                  }
                ],
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                }
              }
            },
            {
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "231b1ae6-afc5-4480-bb54-b1d2e866dde1",
                    "leftValue": "={{ $json.github_status }}",
                    "operator": {
                      "name": "filter.operator.equals",
                      "operation": "equals",
                      "type": "string"
                    },
                    "rightValue": "different"
                  }
                ],
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                }
              }
            },
            {
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5d958a1e-0962-4fab-98fb-bc6f836d55df",
                    "leftValue": "={{ $json.github_status }}",
                    "operator": {
                      "name": "filter.operator.equals",
                      "operation": "equals",
                      "type": "string"
                    },
                    "rightValue": "new"
                  }
                ],
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                }
              }
            },
            {
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ed291532-f5dc-4a3b-a9f5-ac28ec2d67a1",
                    "leftValue": "={{ $json.github_status }}",
                    "operator": {
                      "name": "filter.operator.equals",
                      "operation": "equals",
                      "type": "string"
                    },
                    "rightValue": ""
                  }
                ],
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                }
              }
            }
          ]
        }
      },
      "position": [
        272,
        688
      ],
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2
    },
    {
      "credentials": {
        "githubApi": {
          "id": "IWtvntBMCuzfgvxH",
          "name": "GitHub account"
        }
      },
      "id": "b76382f3-1e83-49f1-b38b-b387005bd261",
      "name": "Edit a file",
      "parameters": {
        "commitMessage": "=[{{ $json.github_status }}] {{ $('Backup To Github').item.json.name }}-{{ $('Github Params').item.json.tags[0].name }} in {{ $('Github Params').item.json.tags[1].name }}",
        "fileContent": "={{ $('Compare Files').item.json.n8n_data_stringy }}",
        "filePath": "={{ $('Github Params').item.json.repo.path }}{{ $('Github Params').item.json.tags[1].name }}/{{ $('Github Params').item.json.name }}-{{ $('Github Params').item.json.tags[0].name }}.json",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Github Params').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Github Params').item.json.repo.name }}"
        },
        "resource": "file"
      },
      "position": [
        672,
        624
      ],
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "webhookId": "5a30ff35-2220-4365-8b40-5b1d82666e59"
    },
    {
      "credentials": {
        "githubApi": {
          "id": "IWtvntBMCuzfgvxH",
          "name": "GitHub account"
        }
      },
      "id": "1369e23b-72c7-4eae-83ed-b98e92629e40",
      "name": "Create a file",
      "parameters": {
        "commitMessage": "=[{{ $json.github_status }}] {{ $json.name }}-{{ $json.tags.filter(tag => /^v(\\d+(\\.\\d+)*)?$/.test(tag.name))[0].name\n }} in {{ $json.tags.filter(tag => /^(development|integration|staging|production)$/i.test(tag.name))[0].name\n }}",
        "fileContent": "={{ $('Compare Files').item.json.n8n_data_stringy }}",
        "filePath": "=propertyguru/{{ $json.tags.filter(tag => /^(development|integration|staging|production)$/i.test(tag.name))[0].name }}/{{ $json.name }}-{{ $json.tags.filter(tag => /^v(\\d+(\\.\\d+)*)?$/.test(tag.name))[0].name }}.json",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "=SandeepFinTechPG"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "=ai-powered-project-insights"
        },
        "resource": "file"
      },
      "position": [
        672,
        816
      ],
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "webhookId": "5500d9f6-53d8-4a5d-a1e1-4adab24620ff"
    },
    {
      "id": "5d54ecd5-6499-4158-8631-7711bc0f3592",
      "name": "Execute Backup Flow",
      "parameters": {
        "options": {},
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "attemptToConvertTypes": false,
          "convertFieldsToString": true,
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "schema": [],
          "value": {}
        }
      },
      "position": [
        560,
        -48
      ],
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2
    },
    {
      "id": "a62df42f-6b73-48aa-8683-cd4f9cbde32e",
      "name": "Sticky Note2",
      "parameters": {
        "color": 3,
        "content": "Backup New Or Apply Existing Changes",
        "height": 400,
        "width": 1280
      },
      "position": [
        -352,
        576
      ],
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1
    },
    {
      "id": "05a9ba9b-5acb-4d91-86b7-c28fc043b6b1",
      "name": "If File Is Too Large",
      "onError": "continueRegularOutput",
      "parameters": {
        "conditions": {
          "combinator": "and",
          "conditions": [
            {
              "id": "0b29edcf-2c7e-4159-bbc3-119ecc5e6840",
              "leftValue": "={{ $json.content }}",
              "operator": {
                "operation": "empty",
                "singleValue": true,
                "type": "string"
              },
              "rightValue": ""
            },
            {
              "id": "fc771752-1860-445b-bff1-92e831155e7e",
              "leftValue": "={{ $json.error }}",
              "operator": {
                "operation": "notExists",
                "singleValue": true,
                "type": "string"
              },
              "rightValue": ""
            }
          ],
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          }
        },
        "options": {}
      },
      "position": [
        480,
        288
      ],
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2
    },
    {
      "credentials": {
        "httpBearerAuth": {
          "id": "IJ2TTw0novK9URJZ",
          "name": "github-n8n-token-local"
        },
        "httpHeaderAuth": {
          "id": "4n1FvmtFFIZyQhwg",
          "name": "Header Auth account"
        }
      },
      "id": "73e6bc17-e54b-4076-8b8d-0a2b8f96dbba",
      "name": "Download File",
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {},
        "url": "=https://api.github.com/repos/{{ $json.repo.owner }}/{{ $json.repo.name }}/contents/{{ $json.repo.path }}{{ $json.tags[1].name }}/{{ $json.name }}-{{ $json.tags[0].name }}.json"
      },
      "position": [
        752,
        272
      ],
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2
    },
    {
      "id": "ec79345b-df93-4ce5-882b-dbc11c41148a",
      "name": "Compare Files",
      "parameters": {
        "jsCode": "function orderJsonKeys(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(orderJsonKeys);\n  } else if (obj && typeof obj === 'object') {\n    return Object.keys(obj)\n      .sort()\n      .reduce((acc, key) => {\n        acc[key] = orderJsonKeys(obj[key]);\n        return acc;\n      }, {});\n  }\n  return obj;\n}\nconst n8nNodesWithIds = $input.all()[0].json.nodes;\n\n// Create a deep clone and remove \"id\" from each node\nfunction removeIdsDeep(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(removeIdsDeep);\n  } else if (obj && typeof obj === 'object') {\n    const newObj = {};\n    for (const key in obj) {\n      if (key !== 'id') {\n        newObj[key] = removeIdsDeep(obj[key]);\n      }\n    }\n    return newObj;\n  }\n  return obj;\n}\n\nconst n8nNodesRemovedIds = n8nNodesWithIds.map(node => removeIdsDeep(node));\n\nconst n8nNodes = orderJsonKeys(n8nNodesRemovedIds);\n\n// check if file returned with content\nif (Object.keys($input.all()[1].json).includes(\"content\")) {\n  // decode base64 content and parse JSON\n  console.log('first if');\n  const n8nWorkflow = $input.all()[0].json;\n  const githubdecodedString = Buffer.from($input.all()[1].json.content, 'base64').toString('utf-8');\nconst githubDecodedJson = JSON.parse(githubdecodedString);\n\nconst githubNodes = orderJsonKeys(githubDecodedJson.nodes)\n\n  // Order JSON objects\n  const orderedN8N = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(n8nNodes) === JSON.stringify(githubNodes)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedN8N, null, 2);\n  }\n\n  $input.all()[0].json.content_decoded = orderedN8N;\n\n  // No file returned / new workflow\n} else if (Object.keys($input.all()[1].json).includes(\"data\")) {\n  console.log('second if');\n  const n8nWorkflow = $input.all()[0].json;\n  const githubdecodedString = Buffer.from($input.all()[1].json.content, 'base64').toString('utf-8');\nconst githubDecodedJson = JSON.parse(githubdecodedString);\n\nconst githubNodes = orderJsonKeys(githubDecodedJson.nodes);\n\n  // Order JSON objects\n  const orderedN8N = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(n8nNodes) === JSON.stringify(githubNodes)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedN8N, null, 2);\n  }\n\n  $input.all()[0].json.content_decoded = orderedN8N;\n} else {\n  // Order JSON Object\n  console.log('third if');\n  const n8nWorkflow = $input.all()[0].json;\n  const orderedN8N = orderJsonKeys(n8nWorkflow);\n\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedN8N, null, 2);\n  $input.all()[0].json.content_decoded = orderedN8N;\n}\n\n// Return items\nreturn $input.all()[0];"
      },
      "position": [
        64,
        720
      ],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2
    },
    {
      "id": "96346beb-2f63-4916-b4af-c70f3afb7b0e",
      "name": "When Executed by Another Workflow",
      "parameters": {
        "inputSource": "passthrough"
      },
      "position": [
        -176,
        288
      ],
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1
    },
    {
      "id": "09a86649-e22b-4233-8896-814dd0295004",
      "name": "On form submission",
      "parameters": {
        "formDescription": "Choose which environment workflows to backup",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Environment",
              "fieldOptions": {
                "values": [
                  {
                    "option": "development"
                  },
                  {
                    "option": "integration"
                  },
                  {
                    "option": "staging"
                  },
                  {
                    "option": "production"
                  }
                ]
              },
              "fieldType": "dropdown",
              "requiredField": true
            }
          ]
        },
        "formTitle": "Choose Environment",
        "options": {}
      },
      "position": [
        -160,
        -128
      ],
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "webhookId": "c044839e-ecfc-484d-b8af-4376ce3c6c1d"
    }
  ],
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T07:28:25.859Z",
      "projectId": "wgKH4mLK7D585smm",
      "role": "workflow:owner",
      "updatedAt": "2025-09-19T07:28:25.859Z",
      "workflowId": "DcJmbLZzbx7CY2sJ"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-20T11:41:26.701Z",
      "id": "AeA7WsBzynNLn26F",
      "name": "integration",
      "updatedAt": "2025-09-20T11:41:26.701Z"
    },
    {
      "createdAt": "2025-09-19T16:09:16.101Z",
      "id": "amKn41nfC1vyga47",
      "name": "v1",
      "updatedAt": "2025-09-19T16:09:16.101Z"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-20T13:30:39.000Z",
  "versionId": "8c7bc02b-c907-44fc-ada2-95c1e972e4be"
}